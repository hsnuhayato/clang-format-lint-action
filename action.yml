name: 'clang-format lint'
author: 'Slobodan Kletnikov (DoozyX)'
description: 'Github Action that check if code is formatted correctly using clang-format'
branding:
  icon: 'check'
  color: 'green'
inputs:
  github_token:
    description: 'GITHUB_TOKEN'
    required: true
  source:
    description: 'Source folder to check formatting'
    required: false
    default: '.'
  exclude:
    description: 'Folder to exclude from formatting check'
    required: false
    default: 'none'
  extensions:
    description: 'List of extensions to check'
    required: false
    default: 'c,h,C,H,cpp,hpp,cc,hh,c++,h++,cxx,hxx'
  clangFormatVersion:
    description: 'Version of clang-format'
    required: false
    default: '9'
  style:
    description: 'Formatting style to use'
    required: false
    default: 'file'
  inplace:
    description: 'Just fix files (`clang-format -i`) instead of returning a diff'
    required: false
    default: False
  level:
    description: "Report level for reviewdog [info,warning,error]"
    required: false
    default: "error"
  reporter:
    description: "Reporter of reviewdog command [github-pr-check,github-pr-review]."
    required: false
    default: "github-pr-check"
  filter_mode:
    description: |
      Filtering mode for the reviewdog command [added,diff_context,file,nofilter].
      Default is added.
    required: false
    default: "added"
  fail_on_error:
    description: |
      Exit code for reviewdog when errors are found [true,false]
      Default is `false`.
    required: false
    default: "false"
  reviewdog_flags:
    description: "Additional reviewdog flags"
    required: false
    default: ""
runs:
  using: 'docker'
  image: 'Dockerfile'
  env:
    INPUT_GITHUG_TOKEN: ${{ inputs.github_token }}
    INPUT_LEVEL: ${{ inputs.level }}
    INPUT_REPORTER: ${{ inputs.reporter }}
    INPUT_FILTER_MODE: ${{ inputs.filter_mode }}
    INPUT_FAIL_ON_ERROR: ${{ inputs.fail_on_error }}
    INPUT_REVIEWDOG_FLAGS: ${{ inputs.reviewdog_flags }}
  args:
    - --clang-format-executable
    - /clang-format/clang-format${{ inputs.clangFormatVersion }}
    - -r
    - --color
    - always
    - --style
    - ${{ inputs.style }}
    - --inplace
    - ${{ inputs.inplace }}
    - --extensions
    - ${{ inputs.extensions }}
    - --exclude
    - ${{ inputs.exclude }}
    - ${{ inputs.source }}
